name: Stable Build

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  # Phase 1 - Run tests
  run-tests:
    uses: ./.github/workflows/run_tests.yml
    secrets: inherit
  run-training-tests:
    needs: [run-tests]
    uses: ./.github/workflows/run_training_tests.yml  
  # Phase 2 - Push to testing endpoint and testing branch
  publish-testpypi:
    needs: [run-training-tests]
    uses: ./.github/workflows/publish_testpypi.yml
    with:
      continue_on_error: true
      is_nightly_build: false
    secrets: inherit
  push-to-nightly:
    needs: [run-training-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Push to Nightly Branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout nightly
          git merge origin/main
          git push -u origin nightly
  # Phase 3 - Publish to release endpoint and update branch
  push-to-stable:
    needs: [push-to-nightly, publish-testpypi]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Push to Stable Branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout stable
          git merge origin/main
          git push -u origin stable
  publish-pypi:
    needs: [push-to-nightly, publish-testpypi]
    uses: ./.github/workflows/publish_pypi.yml
    with:
      continue_on_error: true
    secrets: inherit
  # Phase 4 - Create GitHub release
  github-release:
    runs-on: ubuntu-latest
    needs: [push-to-stable, publish-pypi]
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download Release Artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Generate Sigstore Signatures
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: ./dist/*.tar.gz ./dist/*.whl
      - name: Create a GitHub release
        run: >-
          gh release create --draft --repo '${{ github.repository }}' --generate-notes '${{ github.ref_name }}'
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload signed release files to GitHub release
        run: >-
          gh release upload --repo '${{ github.repository }}'
          '${{ github.ref_name }}'
          dist/**
        env:
          GITHUB_TOKEN: ${{ github.token }}
