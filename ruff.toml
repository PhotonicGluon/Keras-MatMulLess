# Same as the Black configuration used here
line-length = 120
indent-width = 4

# Exclude files
exclude = [
    # Defaults
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    # Added
    ".github",
    "tests",
    "install.py",
    "clean.py",
]

# Support Python 3.9+
target-version = "py39"

[lint]
select = [
    "PL",   # PyLint
    "E",    # pycodestyle
    "W",    # pycodestyle
    "C90",  # maccabe
    "I",    # isort
    "N",    # pep8-naming
    "BLE",  # flake8-blind-except
    "B",    # flake8-bugbear
    "S",    # flake8-security
    "Q",    # flake8-quotes
    "FLY",  # flynt
    "PERF", # Perflint
    "RUF",  # Ruff-specific
]
ignore = [
    # PyLint
    "PLR0913", # too-many-arguments
    "PLR2004", # magic-value-comparison
]
unfixable = [
    "B", # Avoid trying to fix flake8-bugbear (`B`) violations
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[lint.pylint]
max-locals = 25

[lint.pydocstyle]
convention = "numpy"
